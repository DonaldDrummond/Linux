Commands

Examples of less
less /etc/passwd - paginate the file /etc/passwd
q - quit
G - go to bottom of page
g - go to top of page
/text - search for specific text
n - repeat the last search
?text - perform backwards search for specific text

Examples of cat
cat /etc/passwd - displays the contents of /etc/passwd to STDOUT
better used for short files as it ends on the last line of output, if you want to display the first line of output in a long file try using 'tac' the inverse of cat

Examples of tail
tail /etc/passwd - displays the last 10 lines of /etc/passwd
-n 5 or 5 - will display the last 5 lines
-f will display last 10 lines and continue to refresh output (great for watching log files)

Examples of head
head /etc/passwd - displays the first 10 lines of /etc/passwd
-n 5 or 5 - will display the first 5 lines
head -n 11 /etc/passwd | tail -n 1 - displays line number 11 in /etc/passwd


Examples of cut
cut -d ':' -f 1 /etc/passwd - will display the text in the first column of /etc/passwd using the ':' as the marker for the next column or delimiter


Examples of sort
sort /etc/passwd - sorts the content of /etc/passwd in alphabetic order
-n - sort in numeric order
-r - sort in reverse order (-rn)
-k - sort by column number (-k3)
-t - use a delimiter (-t ':')
sort -k3 -t ':' /etc/passwd - sort on column 3 of /etc/passwd using ':' as the delimiter


Examples of wc
wc /etc/passwd - displays the number of lines, words, and characters in /etc/passwd
-l - number of lines
-w - number of words
-c - number of characters


Examples of grep
grep ^jeep /Documents/vehicles.txt - uses a regular expression to search for all lines that start with the string jeep in the file /Documents/vehicles.txt
^text - line starts with text
text$ - line ends with text
. - wildcard that matches any single character
[abc] - matches a, b, or c
* - match 0 to infinite number of the previous character
\{2\} - match exactly two of the previous character
\{1, 3\} - match a minimum of 1 and a maximum of 3 of the previous character
colou?r - match 0 or 1 of the previous character, makes the previous character optional
-i - not case sensitive
-v - show lines that do not contain the expression
-r - search files in the current director and all subdirectories
-e - used for matching more than one expression on a line
-A <number> - display <number> of lines after the matching regular expression
-B <number> - display <number> of lines before the matching regular expression
grep '^#' /file - will display all the lines starting with a # (i.e. comments)
grep -v '^#' /file - display all lines that do not start with a #
grep -v '^#' /file -B 5 - show lines that do not start with a # and the five lines before it
grep -v -e '^#' -e '^$' /file - exclude all lines that are blank or start with a #


Examples of awk
awk -F ':' '{print $1}' /etc/passwd - display the first column in /etc/passwd using ':' as the delimiter
when in doubt use awk :`)
awk -F ':' '/penguin/ {print "Penguin UID: ",$3}' /etc/passwd - searches for the expression 'penguin' and displays "Penguin UID: " with whatever the value is in column 3

ps auxw |awk '/\/usr\/sbin\/sshd/ {print "SSHD PID: ",$2}' - searches for the expression '/usr/sbin/sshd' in the STDOUT of the ps command and then prints "SSHD PID: " in addition to the value found in column 2 for every matching line, which in this case is the PID

awk -F ':' '{print "Penguin UID: ", $3}' /etc/passwd


Examples of sed
sed -n 5p /etc/passwd - displays the fifth line of the file /etc/passwd

sed -i 's/blah/blahblahblahblah/g' movie.script - will do a global replace directly to the file and not STDOUT of the word blah with the word blahblahblahblah {Hotel Translyvania FTW}

sed -i -e '2d' somefile.txt - deletes line number two from the file somefile.txt

sed -i -e '2d;20,25d' somefile.txt - deletes line number two and line numbers twenty through twenty-five from the file somefile.txt

sed -n '3~2'p somefile.txt - prints every 2nd line starting from line 3

sed 2q somefile.txt - display the first two lines

sed -n /^root/p somefile.txt - print all lines in somefile.txt that start with the word root

sudo virsh list | sed 1,2d | sed /^$/d - 

cat /etc/services |awk '{printf "%16s %15s\n", $1, $2}' |sed 's/\//:/g' | sed '1,9d' |less

# Delete first and last char in string
sed 's/^.\(.*\).$/\1/â€˜

# Delete blank lines of a file
sed '/^$/d' blah.txt